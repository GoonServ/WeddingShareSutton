@model IDictionary<string, string>?
@using WeddingShare.Constants

@if (Model != null && Model.Any())
{
    <div class="row mb-4 mb-lg-4">
        <div class="col-12">
            <label>@_localizer["Settings_Themes_Enabled_Label"].Value</label>
            <select class="setting-field form-control" data-setting-name="@Settings.Themes.Enabled">
                @foreach (var option in ViewOptions.YesNo)
                {
                    if (Model.GetValue(Settings.Themes.Enabled.ToUpper(), "true").Equals(option.Value, StringComparison.OrdinalIgnoreCase))
                    {
                        <option value="@option.Value" selected="selected">@option.Key</option>
                    }
                    else
                    {
                        <option value="@option.Value">@option.Key</option>
                    }
                }
            </select>
            <div class="form-text">@_localizer["Settings_Themes_Enabled_Help"].Value</div>
        </div>
    </div>

    <div class="row mb-4 mb-lg-4">
        <div class="col-12">
            <label>@_localizer["Settings_Themes_Default_Label"].Value</label>
            <select class="setting-field form-control" data-setting-name="@Settings.Themes.Default">
                @foreach (Themes t in Enum.GetValues(typeof(Themes)))
                {
                    if (Model.GetValue(Settings.Themes.Default.ToUpper(), Themes.Default.ToString()).Equals(t.ToString(), StringComparison.OrdinalIgnoreCase))
                    {
                        <option value="@t.ToString()" selected="selected">@t.ToString()</option>
                    }
                    else
                    {
                        <option value="@t.ToString()">@t.ToString()</option>
                    }
                }
            </select>
            <div class="form-text">@_localizer["Settings_Themes_Default_Help"].Value</div>
        </div>
    </div>
}